{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hiruna Kithsandu\\\\Documents\\\\GitHub\\\\CookSphere\\\\frontend\\\\src\\\\pages\\\\posts\\\\PostList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Container, Grid, Paper, Typography, Button, Box, Card, CardContent, CardActions, CardMedia, Chip, IconButton, Menu, MenuItem, Alert, CircularProgress, Dialog, DialogTitle, DialogContent, DialogActions } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { useAuth } from '../../contexts/AuthContext';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostList = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const navigate = useNavigate();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [selectedPost, setSelectedPost] = useState(null);\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n  const fetchPosts = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      console.log('Fetching posts from API...');\n\n      // Add request interceptor to log request details\n      axios.interceptors.request.use(request => {\n        console.log('Request:', {\n          method: request.method,\n          url: request.url,\n          headers: request.headers,\n          data: request.data\n        });\n        return request;\n      });\n\n      // Add response interceptor to log response details\n      axios.interceptors.response.use(response => {\n        console.log('Response:', {\n          status: response.status,\n          headers: response.headers,\n          data: response.data\n        });\n        return response;\n      }, error => {\n        console.error('Response Error:', {\n          message: error.message,\n          response: error.response ? {\n            status: error.response.status,\n            statusText: error.response.statusText,\n            data: error.response.data\n          } : 'No response',\n          config: error.config\n        });\n        return Promise.reject(error);\n      });\n      const response = await axios.get('/api/posts', {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        withCredentials: true\n      });\n      console.log('API Response:', response);\n      console.log('Response data type:', typeof response.data);\n      console.log('Response data:', response.data);\n      if (Array.isArray(response.data)) {\n        // Parse ingredients and steps from JSON strings\n        const processedPosts = response.data.map(post => {\n          console.log('Raw post data:', post);\n\n          // Helper function to parse deeply nested JSON strings\n          const parseDeepJson = str => {\n            if (!str || typeof str !== 'string') return str;\n            try {\n              // First parse\n              const firstParse = JSON.parse(str);\n\n              // If it's an array with one string element that looks like JSON\n              if (Array.isArray(firstParse) && firstParse.length === 1 && typeof firstParse[0] === 'string' && firstParse[0].startsWith('[')) {\n                // Second parse\n                const secondParse = JSON.parse(firstParse[0]);\n\n                // If it's an array with one string element that looks like JSON\n                if (Array.isArray(secondParse) && secondParse.length === 1 && typeof secondParse[0] === 'string' && secondParse[0].startsWith('[')) {\n                  // Third parse\n                  return JSON.parse(secondParse[0]);\n                }\n                return secondParse;\n              }\n              return firstParse;\n            } catch (e) {\n              console.error('Error parsing deep JSON:', e);\n              return str;\n            }\n          };\n\n          // Process ingredients\n          if (typeof post.ingredients === 'string') {\n            post.ingredients = parseDeepJson(post.ingredients);\n          }\n\n          // Process steps\n          if (typeof post.steps === 'string') {\n            post.steps = parseDeepJson(post.steps);\n          }\n\n          // Ensure they're arrays\n          if (!Array.isArray(post.ingredients)) {\n            post.ingredients = [];\n          }\n          if (!Array.isArray(post.steps)) {\n            post.steps = [];\n          }\n          return post;\n        });\n        setPosts(processedPosts);\n        console.log(`Successfully loaded ${processedPosts.length} posts`);\n        if (processedPosts.length === 0) {\n          console.log('No posts found in the response');\n        } else {\n          console.log('First post:', processedPosts[0]);\n        }\n      } else if (response.data === null) {\n        console.error('Received null response data');\n        setError('Server returned null data. Please try again later.');\n      } else {\n        console.error('Expected an array of posts, but got:', typeof response.data);\n        setError('Invalid data format received from server');\n      }\n    } catch (error) {\n      console.error('Error fetching posts:', error);\n      console.error('Error details:', {\n        message: error.message,\n        response: error.response ? {\n          status: error.response.status,\n          statusText: error.response.statusText,\n          data: error.response.data\n        } : 'No response data',\n        request: error.request ? 'Request was made but no response received' : 'No request was made'\n      });\n      let errorMessage = 'Failed to load posts. Please try again later.';\n      if (error.response) {\n        errorMessage += ` (Status: ${error.response.status})`;\n        if (error.response.data && error.response.data.message) {\n          errorMessage += ` - ${error.response.data.message}`;\n        }\n      } else if (error.request) {\n        errorMessage += ' (No response from server)';\n      } else {\n        errorMessage += ` (${error.message})`;\n      }\n      setError(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleMenuOpen = (event, post) => {\n    setAnchorEl(event.currentTarget);\n    setSelectedPost(post);\n  };\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    setSelectedPost(null);\n  };\n  const handleEdit = () => {\n    handleMenuClose();\n    navigate(`/posts/${selectedPost.id}/edit`);\n  };\n  const handleDeleteClick = post => {\n    setSelectedPost(post);\n    setDeleteDialogOpen(true);\n  };\n  const handleDeleteConfirm = async () => {\n    try {\n      await axios.delete(`/api/posts/${selectedPost.id}`);\n      fetchPosts();\n      setDeleteDialogOpen(false);\n    } catch (error) {\n      console.error('Error deleting post:', error);\n      setError('Failed to delete post. Please try again later.');\n    }\n  };\n  const handleDeleteCancel = () => {\n    setDeleteDialogOpen(false);\n    setSelectedPost(null);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        mt: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    sx: {\n      mt: 4,\n      mb: 4\n    },\n    children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 2\n      },\n      children: [error, /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: fetchPosts,\n        sx: {\n          ml: 2\n        },\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 3,\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            children: \"Cooking Posts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 26\n            }, this),\n            onClick: () => navigate('/posts/create'),\n            children: \"New Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: posts.length > 0 ? /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: posts.map(post => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            lg: 4,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: [post.mediaUrls && post.mediaUrls.length > 0 && (post.mediaType === 'image' ? /*#__PURE__*/_jsxDEV(CardMedia, {\n                component: \"img\",\n                height: \"300\",\n                image: post.mediaUrls[0],\n                alt: post.title,\n                sx: {\n                  objectFit: 'contain',\n                  backgroundColor: '#f5f5f5',\n                  maxHeight: '300px',\n                  width: '100%'\n                },\n                onError: e => {\n                  console.error('Error loading image:', post.mediaUrls[0]);\n                  e.target.src = '/placeholder-image.jpg';\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 25\n              }, this) : post.mediaType === 'video' ? /*#__PURE__*/_jsxDEV(CardMedia, {\n                component: \"video\",\n                height: \"200\",\n                image: post.mediaUrls[0],\n                controls: true,\n                sx: {\n                  objectFit: 'cover'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 25\n              }, this) : null), /*#__PURE__*/_jsxDEV(CardContent, {\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    alignItems: 'flex-start'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    gutterBottom: true,\n                    children: post.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 314,\n                    columnNumber: 25\n                  }, this), user && user.sub === post.userId && /*#__PURE__*/_jsxDEV(IconButton, {\n                    onClick: e => handleMenuOpen(e, post),\n                    children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 319,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 318,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  paragraph: true,\n                  children: post.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    gap: 1,\n                    flexWrap: 'wrap'\n                  },\n                  children: (() => {\n                    const getIngredients = post => {\n                      try {\n                        // If it's already an array, use it\n                        if (Array.isArray(post.ingredients)) {\n                          return post.ingredients;\n                        }\n\n                        // If it's a string, try to parse it\n                        if (typeof post.ingredients === 'string') {\n                          try {\n                            const parsed = JSON.parse(post.ingredients);\n                            return Array.isArray(parsed) ? parsed : [post.ingredients];\n                          } catch (e) {\n                            // If parsing fails, it might be a single string value\n                            return [post.ingredients];\n                          }\n                        }\n\n                        // Default to empty array\n                        return [];\n                      } catch (e) {\n                        console.error('Error extracting ingredients:', e);\n                        return [];\n                      }\n                    };\n                    const ingredients = getIngredients(post);\n                    console.log('Rendering ingredients:', ingredients);\n\n                    // Ensure we have an array of strings and filter out empty values\n                    const finalIngredients = Array.isArray(ingredients) ? ingredients.filter(ing => ing && ing.trim() !== '') : [ingredients].filter(ing => ing && ing.trim() !== '');\n                    return finalIngredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(Chip, {\n                      label: ingredient,\n                      size: \"small\",\n                      variant: \"outlined\"\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 363,\n                      columnNumber: 29\n                    }, this));\n                  })()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  size: \"small\",\n                  onClick: () => navigate(`/posts/${post.id}`),\n                  children: \"View Details\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 374,\n                  columnNumber: 23\n                }, this), user && user.sub === post.userId && /*#__PURE__*/_jsxDEV(IconButton, {\n                  size: \"small\",\n                  color: \"error\",\n                  onClick: () => handleDeleteClick(post),\n                  sx: {\n                    ml: 'auto'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 384,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 378,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  sx: {\n                    ml: 1\n                  },\n                  children: post.createdAt ? new Date(post.createdAt).toLocaleDateString() : 'No date'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 387,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 19\n            }, this)\n          }, post.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 3,\n            textAlign: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            color: \"text.secondary\",\n            children: \"No posts yet. Start sharing your recipes!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 28\n            }, this),\n            onClick: () => navigate('/posts/create'),\n            sx: {\n              mt: 2\n            },\n            children: \"Create Your First Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      anchorEl: anchorEl,\n      open: Boolean(anchorEl),\n      onClose: handleMenuClose,\n      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: handleEdit,\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: handleDeleteClick,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: deleteDialogOpen,\n      onClose: handleDeleteCancel,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Delete Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Are you sure you want to delete this post? This action cannot be undone.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleDeleteCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleDeleteConfirm,\n          color: \"error\",\n          variant: \"contained\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 245,\n    columnNumber: 5\n  }, this);\n};\n_s(PostList, \"bytQhv92R2IXoEf4uRbtAb2CXWQ=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Container","Grid","Paper","Typography","Button","Box","Card","CardContent","CardActions","CardMedia","Chip","IconButton","Menu","MenuItem","Alert","CircularProgress","Dialog","DialogTitle","DialogContent","DialogActions","AddIcon","MoreVertIcon","DeleteIcon","useAuth","axios","jsxDEV","_jsxDEV","PostList","_s","user","navigate","posts","setPosts","loading","setLoading","error","setError","anchorEl","setAnchorEl","selectedPost","setSelectedPost","deleteDialogOpen","setDeleteDialogOpen","fetchPosts","console","log","interceptors","request","use","method","url","headers","data","response","status","message","statusText","config","Promise","reject","get","withCredentials","Array","isArray","processedPosts","map","post","parseDeepJson","str","firstParse","JSON","parse","length","startsWith","secondParse","e","ingredients","steps","errorMessage","handleMenuOpen","event","currentTarget","handleMenuClose","handleEdit","id","handleDeleteClick","handleDeleteConfirm","delete","handleDeleteCancel","sx","display","justifyContent","mt","children","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","mb","severity","variant","color","onClick","ml","container","spacing","item","xs","p","alignItems","startIcon","md","lg","mediaUrls","mediaType","component","height","image","alt","title","objectFit","backgroundColor","maxHeight","width","onError","target","src","controls","gutterBottom","sub","userId","paragraph","description","gap","flexWrap","getIngredients","parsed","finalIngredients","filter","ing","trim","ingredient","index","label","size","createdAt","Date","toLocaleDateString","textAlign","open","Boolean","onClose","_c","$RefreshReg$"],"sources":["C:/Users/Hiruna Kithsandu/Documents/GitHub/CookSphere/frontend/src/pages/posts/PostList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  Container,\n  Grid,\n  Paper,\n  Typography,\n  Button,\n  Box,\n  Card,\n  CardContent,\n  CardActions,\n  CardMedia,\n  Chip,\n  IconButton,\n  Menu,\n  MenuItem,\n  Alert,\n  CircularProgress,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions\n} from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { useAuth } from '../../contexts/AuthContext';\nimport axios from 'axios';\n\nconst PostList = () => {\n  const { user } = useAuth();\n  const navigate = useNavigate();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [selectedPost, setSelectedPost] = useState(null);\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n\n  const fetchPosts = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      console.log('Fetching posts from API...');\n      \n      // Add request interceptor to log request details\n      axios.interceptors.request.use(request => {\n        console.log('Request:', {\n          method: request.method,\n          url: request.url,\n          headers: request.headers,\n          data: request.data\n        });\n        return request;\n      });\n\n      // Add response interceptor to log response details\n      axios.interceptors.response.use(\n        response => {\n          console.log('Response:', {\n            status: response.status,\n            headers: response.headers,\n            data: response.data\n          });\n          return response;\n        },\n        error => {\n          console.error('Response Error:', {\n            message: error.message,\n            response: error.response ? {\n              status: error.response.status,\n              statusText: error.response.statusText,\n              data: error.response.data\n            } : 'No response',\n            config: error.config\n          });\n          return Promise.reject(error);\n        }\n      );\n\n      const response = await axios.get('/api/posts', {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        withCredentials: true\n      });\n\n      console.log('API Response:', response);\n      console.log('Response data type:', typeof response.data);\n      console.log('Response data:', response.data);\n\n      if (Array.isArray(response.data)) {\n        // Parse ingredients and steps from JSON strings\n        const processedPosts = response.data.map(post => {\n          console.log('Raw post data:', post);\n          \n          // Helper function to parse deeply nested JSON strings\n          const parseDeepJson = (str) => {\n            if (!str || typeof str !== 'string') return str;\n            \n            try {\n              // First parse\n              const firstParse = JSON.parse(str);\n              \n              // If it's an array with one string element that looks like JSON\n              if (Array.isArray(firstParse) && firstParse.length === 1 && \n                  typeof firstParse[0] === 'string' && firstParse[0].startsWith('[')) {\n                // Second parse\n                const secondParse = JSON.parse(firstParse[0]);\n                \n                // If it's an array with one string element that looks like JSON\n                if (Array.isArray(secondParse) && secondParse.length === 1 && \n                    typeof secondParse[0] === 'string' && secondParse[0].startsWith('[')) {\n                  // Third parse\n                  return JSON.parse(secondParse[0]);\n                }\n                \n                return secondParse;\n              }\n              \n              return firstParse;\n            } catch (e) {\n              console.error('Error parsing deep JSON:', e);\n              return str;\n            }\n          };\n          \n          // Process ingredients\n          if (typeof post.ingredients === 'string') {\n            post.ingredients = parseDeepJson(post.ingredients);\n          }\n          \n          // Process steps\n          if (typeof post.steps === 'string') {\n            post.steps = parseDeepJson(post.steps);\n          }\n          \n          // Ensure they're arrays\n          if (!Array.isArray(post.ingredients)) {\n            post.ingredients = [];\n          }\n          \n          if (!Array.isArray(post.steps)) {\n            post.steps = [];\n          }\n          \n          return post;\n        });\n        \n        setPosts(processedPosts);\n        console.log(`Successfully loaded ${processedPosts.length} posts`);\n        if (processedPosts.length === 0) {\n          console.log('No posts found in the response');\n        } else {\n          console.log('First post:', processedPosts[0]);\n        }\n      } else if (response.data === null) {\n        console.error('Received null response data');\n        setError('Server returned null data. Please try again later.');\n      } else {\n        console.error('Expected an array of posts, but got:', typeof response.data);\n        setError('Invalid data format received from server');\n      }\n    } catch (error) {\n      console.error('Error fetching posts:', error);\n      console.error('Error details:', {\n        message: error.message,\n        response: error.response ? {\n          status: error.response.status,\n          statusText: error.response.statusText,\n          data: error.response.data\n        } : 'No response data',\n        request: error.request ? 'Request was made but no response received' : 'No request was made'\n      });\n      \n      let errorMessage = 'Failed to load posts. Please try again later.';\n      if (error.response) {\n        errorMessage += ` (Status: ${error.response.status})`;\n        if (error.response.data && error.response.data.message) {\n          errorMessage += ` - ${error.response.data.message}`;\n        }\n      } else if (error.request) {\n        errorMessage += ' (No response from server)';\n      } else {\n        errorMessage += ` (${error.message})`;\n      }\n      \n      setError(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleMenuOpen = (event, post) => {\n    setAnchorEl(event.currentTarget);\n    setSelectedPost(post);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    setSelectedPost(null);\n  };\n\n  const handleEdit = () => {\n    handleMenuClose();\n    navigate(`/posts/${selectedPost.id}/edit`);\n  };\n\n  const handleDeleteClick = (post) => {\n    setSelectedPost(post);\n    setDeleteDialogOpen(true);\n  };\n\n  const handleDeleteConfirm = async () => {\n    try {\n      await axios.delete(`/api/posts/${selectedPost.id}`);\n      fetchPosts();\n      setDeleteDialogOpen(false);\n    } catch (error) {\n      console.error('Error deleting post:', error);\n      setError('Failed to delete post. Please try again later.');\n    }\n  };\n\n  const handleDeleteCancel = () => {\n    setDeleteDialogOpen(false);\n    setSelectedPost(null);\n  };\n\n  if (loading) {\n    return (\n      <Container sx={{ display: 'flex', justifyContent: 'center', mt: 4 }}>\n        <CircularProgress />\n      </Container>\n    );\n  }\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n      {error && (\n        <Alert severity=\"error\" sx={{ mb: 2 }}>\n          {error}\n          <Button \n            variant=\"contained\" \n            color=\"primary\" \n            onClick={fetchPosts}\n            sx={{ ml: 2 }}\n          >\n            Retry\n          </Button>\n        </Alert>\n      )}\n\n      <Grid container spacing={3}>\n        {/* Header */}\n        <Grid item xs={12}>\n          <Paper sx={{ p: 3, display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n            <Typography variant=\"h4\">\n              Cooking Posts\n            </Typography>\n            <Button\n              variant=\"contained\"\n              startIcon={<AddIcon />}\n              onClick={() => navigate('/posts/create')}\n            >\n              New Post\n            </Button>\n          </Paper>\n        </Grid>\n\n        {/* Posts Grid */}\n        <Grid item xs={12}>\n          {posts.length > 0 ? (\n            <Grid container spacing={3}>\n              {posts.map((post) => (\n                <Grid item xs={12} md={6} lg={4} key={post.id}>\n                  <Card>\n                    {post.mediaUrls && post.mediaUrls.length > 0 && (\n                      post.mediaType === 'image' ? (\n                        <CardMedia\n                          component=\"img\"\n                          height=\"300\"\n                          image={post.mediaUrls[0]}\n                          alt={post.title}\n                          sx={{ \n                            objectFit: 'contain',\n                            backgroundColor: '#f5f5f5',\n                            maxHeight: '300px',\n                            width: '100%'\n                          }}\n                          onError={(e) => {\n                            console.error('Error loading image:', post.mediaUrls[0]);\n                            e.target.src = '/placeholder-image.jpg';\n                          }}\n                        />\n                      ) : post.mediaType === 'video' ? (\n                        <CardMedia\n                          component=\"video\"\n                          height=\"200\"\n                          image={post.mediaUrls[0]}\n                          controls\n                          sx={{ objectFit: 'cover' }}\n                        />\n                      ) : null\n                    )}\n                    <CardContent>\n                      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start' }}>\n                        <Typography variant=\"h6\" gutterBottom>\n                          {post.title}\n                        </Typography>\n                        {user && user.sub === post.userId && (\n                          <IconButton onClick={(e) => handleMenuOpen(e, post)}>\n                            <MoreVertIcon />\n                          </IconButton>\n                        )}\n                      </Box>\n                      <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\n                        {post.description}\n                      </Typography>\n                      <Box sx={{ display: 'flex', gap: 1, flexWrap: 'wrap' }}>\n                        {(() => {\n                          const getIngredients = (post) => {\n                            try {\n                              // If it's already an array, use it\n                              if (Array.isArray(post.ingredients)) {\n                                return post.ingredients;\n                              }\n                              \n                              // If it's a string, try to parse it\n                              if (typeof post.ingredients === 'string') {\n                                try {\n                                  const parsed = JSON.parse(post.ingredients);\n                                  return Array.isArray(parsed) ? parsed : [post.ingredients];\n                                } catch (e) {\n                                  // If parsing fails, it might be a single string value\n                                  return [post.ingredients];\n                                }\n                              }\n                              \n                              // Default to empty array\n                              return [];\n                            } catch (e) {\n                              console.error('Error extracting ingredients:', e);\n                              return [];\n                            }\n                          };\n                          \n                          const ingredients = getIngredients(post);\n                          console.log('Rendering ingredients:', ingredients);\n                          \n                          // Ensure we have an array of strings and filter out empty values\n                          const finalIngredients = Array.isArray(ingredients) \n                            ? ingredients.filter(ing => ing && ing.trim() !== '')\n                            : [ingredients].filter(ing => ing && ing.trim() !== '');\n                          \n                          return finalIngredients.map((ingredient, index) => (\n                            <Chip\n                              key={index}\n                              label={ingredient}\n                              size=\"small\"\n                              variant=\"outlined\"\n                            />\n                          ));\n                        })()}\n                      </Box>\n                    </CardContent>\n                    <CardActions>\n                      <Button size=\"small\" onClick={() => navigate(`/posts/${post.id}`)}>\n                        View Details\n                      </Button>\n                      {user && user.sub === post.userId && (\n                        <IconButton \n                          size=\"small\" \n                          color=\"error\" \n                          onClick={() => handleDeleteClick(post)}\n                          sx={{ ml: 'auto' }}\n                        >\n                          <DeleteIcon />\n                        </IconButton>\n                      )}\n                      <Typography variant=\"body2\" color=\"text.secondary\" sx={{ ml: 1 }}>\n                        {post.createdAt ? new Date(post.createdAt).toLocaleDateString() : 'No date'}\n                      </Typography>\n                    </CardActions>\n                  </Card>\n                </Grid>\n              ))}\n            </Grid>\n          ) : (\n            <Paper sx={{ p: 3, textAlign: 'center' }}>\n              <Typography color=\"text.secondary\">\n                No posts yet. Start sharing your recipes!\n              </Typography>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                startIcon={<AddIcon />}\n                onClick={() => navigate('/posts/create')}\n                sx={{ mt: 2 }}\n              >\n                Create Your First Post\n              </Button>\n            </Paper>\n          )}\n        </Grid>\n      </Grid>\n\n      {/* Post Actions Menu */}\n      <Menu\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={handleMenuClose}\n      >\n        <MenuItem onClick={handleEdit}>Edit</MenuItem>\n        <MenuItem onClick={handleDeleteClick}>Delete</MenuItem>\n      </Menu>\n\n      {/* Delete Confirmation Dialog */}\n      <Dialog\n        open={deleteDialogOpen}\n        onClose={handleDeleteCancel}\n      >\n        <DialogTitle>Delete Post</DialogTitle>\n        <DialogContent>\n          <Typography>\n            Are you sure you want to delete this post? This action cannot be undone.\n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleDeleteCancel}>Cancel</Button>\n          <Button onClick={handleDeleteConfirm} color=\"error\" variant=\"contained\">\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Container>\n  );\n};\n\nexport default PostList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}