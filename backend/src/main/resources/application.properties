spring.application.name=cooking-edition
# MongoDB Configuration
spring.data.mongodb.uri=mongodb+srv://pafprojectsliitall:ABC@skillshare.htg8fji.mongodb.net/
spring.data.mongodb.database=skillshare

# OAuth 2.0 Configuration (Google)
# TODO: Replace these values with your Google OAuth2 credentials from Google Cloud Console
# 1. Go to https://console.cloud.google.com/
# 2. Create a project or select existing one
# 3. Enable Google+ API
# 4. Go to Credentials -> Create OAuth 2.0 Client ID
# 5. Set authorized redirect URI to: http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.registration.google.client-id=656761282398-8069t6pb33ur0qvtkqjg9a66gktk897b.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=openid,email,profile
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.jwk-set-uri=https://www.googleapis.com/oauth2/v3/certs
spring.security.oauth2.client.provider.google.user-name-attribute=sub

# Server Port
server.port=8080

# Error Handling
server.error.whitelabel.enabled=false
server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-stacktrace=never
server.error.include-exception=false

# Thymeleaf Configuration
spring.thymeleaf.cache=false
spring.thymeleaf.enabled=true
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML

# Static Resources
spring.web.resources.static-locations=classpath:/static/
spring.mvc.static-path-pattern=/**

# File Upload Configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
upload.path=uploads
file.upload-dir=uploads/


# Logging
logging.level.org.springframework=DEBUG
logging.level.com.skillsync=DEBUG
logging.level.org.springframework.data.mongodb=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.security=DEBUG